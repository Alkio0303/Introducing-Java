[33mcommit 1633f0169718907cbba79e4efd4e44aeb9a2c6df[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m)[m
Author: Viktor Dimitrov <viktordimitrov3435@gmail.com>
Date:   Thu Jun 15 17:26:26 2023 +0300

    First commit

[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..f68d109[m
[1m--- /dev/null[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32m### IntelliJ IDEA ###[m
[32m+[m[32mout/[m
[32m+[m[32m!**/src/main/**/out/[m
[32m+[m[32m!**/src/test/**/out/[m
[32m+[m
[32m+[m[32m### Eclipse ###[m
[32m+[m[32m.apt_generated[m
[32m+[m[32m.classpath[m
[32m+[m[32m.factorypath[m
[32m+[m[32m.project[m
[32m+[m[32m.settings[m
[32m+[m[32m.springBeans[m
[32m+[m[32m.sts4-cache[m
[32m+[m[32mbin/[m
[32m+[m[32m!**/src/main/**/bin/[m
[32m+[m[32m!**/src/test/**/bin/[m
[32m+[m
[32m+[m[32m### NetBeans ###[m
[32m+[m[32m/nbproject/private/[m
[32m+[m[32m/nbbuild/[m
[32m+[m[32m/dist/[m
[32m+[m[32m/nbdist/[m
[32m+[m[32m/.nb-gradle/[m
[32m+[m
[32m+[m[32m### VS Code ###[m
[32m+[m[32m.vscode/[m
[32m+[m
[32m+[m[32m### Mac OS ###[m
[32m+[m[32m.DS_Store[m
\ No newline at end of file[m
[1mdiff --git a/.idea/.gitignore b/.idea/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..26d3352[m
[1m--- /dev/null[m
[1m+++ b/.idea/.gitignore[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32m# Default ignored files[m
[32m+[m[32m/shelf/[m
[32m+[m[32m/workspace.xml[m
[1mdiff --git a/.idea/misc.xml b/.idea/misc.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..cf9abe6[m
[1m--- /dev/null[m
[1m+++ b/.idea/misc.xml[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project version="4">[m
[32m+[m[32m  <component name="ProjectRootManager" version="2" languageLevel="JDK_20" default="true" project-jdk-name="openjdk-20" project-jdk-type="JavaSDK">[m
[32m+[m[32m    <output url="file://$PROJECT_DIR$/out" />[m
[32m+[m[32m  </component>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/modules.xml b/.idea/modules.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..6518dee[m
[1m--- /dev/null[m
[1m+++ b/.idea/modules.xml[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project version="4">[m
[32m+[m[32m  <component name="ProjectModuleManager">[m
[32m+[m[32m    <modules>[m
[32m+[m[32m      <module fileurl="file://$PROJECT_DIR$/FirstProject.iml" filepath="$PROJECT_DIR$/FirstProject.iml" />[m
[32m+[m[32m    </modules>[m
[32m+[m[32m  </component>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/vcs.xml b/.idea/vcs.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..94a25f7[m
[1m--- /dev/null[m
[1m+++ b/.idea/vcs.xml[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project version="4">[m
[32m+[m[32m  <component name="VcsDirectoryMappings">[m
[32m+[m[32m    <mapping directory="$PROJECT_DIR$" vcs="Git" />[m
[32m+[m[32m  </component>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/FirstProject.iml b/FirstProject.iml[m
[1mnew file mode 100644[m
[1mindex 0000000..c90834f[m
[1m--- /dev/null[m
[1m+++ b/FirstProject.iml[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<module type="JAVA_MODULE" version="4">[m
[32m+[m[32m  <component name="NewModuleRootManager" inherit-compiler-output="true">[m
[32m+[m[32m    <exclude-output />[m
[32m+[m[32m    <content url="file://$MODULE_DIR$">[m
[32m+[m[32m      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />[m
[32m+[m[32m    </content>[m
[32m+[m[32m    <orderEntry type="inheritedJdk" />[m
[32m+[m[32m    <orderEntry type="sourceFolder" forTests="false" />[m
[32m+[m[32m  </component>[m
[32m+[m[32m</module>[m
\ No newline at end of file[m
[1mdiff --git a/src/com.sirma.javacource.intro.gcd.GreatestCommonDivisorOfTwoIntegers.java b/src/com.sirma.javacource.intro.gcd.GreatestCommonDivisorOfTwoIntegers.java[m
[1mnew file mode 100644[m
[1mindex 0000000..d616e12[m
[1m--- /dev/null[m
[1m+++ b/src/com.sirma.javacource.intro.gcd.GreatestCommonDivisorOfTwoIntegers.java[m
[36m@@ -0,0 +1,45 @@[m
[32m+[m[32mimport java.util.Scanner;[m
[32m+[m[32mimport java.util.logging.Logger;[m
[32m+[m
[32m+[m[32mpublic class com.sirma.javacource.intro.gcd.GreatestCommonDivisorOfTwoIntegers {[m
[32m+[m[32m    public static void main(String[] args) {[m
[32m+[m
[32m+[m[32m        Scanner scan = new Scanner(System.in);[m
[32m+[m[32m        int firstNumber = Integer.parseInt(scan.nextLine());[m
[32m+[m[32m        int secondNumber = Integer.parseInt(scan.nextLine()); /*getting input from the console */[m
[32m+[m
[32m+[m[32m        System.out.println(GCD(firstNumber, secondNumber));[m
[32m+[m[32m    }[m
[32m+[m[32m    /* method for calculating the GCD */[m
[32m+[m[32m    public static String GCD(int num1, int num2){   /*parameters are the numbers which are read from the console */[m
[32m+[m[32m        while(num1 != num2) {           /* while loop until the numbers are equal. If the numbers are equal, the GCD is found */[m
[32m+[m
[32m+[m[32m            if(num1 > num2) {           /*By subtracting the smaller number from the bigger at the end the GCD will be found */[m
[32m+[m[32m                num1 -= num2;[m
[32m+[m[32m            }[m
[32m+[m[32m                                        /*Checking which number is smaller*/[m
[32m+[m[32m            else {[m
[32m+[m[32m                num2 -= num1;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return "GCD: " + num1;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /* method for calculating the LCD */[m
[32m+[m[32m    public static String LCD(int num1, int num2){[m
[32m+[m[32m        int numbsMultiplication = num1 * num2;      /*it is needed for the formula for calculating the lcm */[m
[32m+[m[32m        while(num1 != num2) {                       /*calculating the GCD */[m
[32m+[m
[32m+[m[32m            if(num1 > num2) {[m
[32m+[m[32m                num1 -= num2;[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            else {[m
[32m+[m[32m                num2 -= num1;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        int lcm = numbsMultiplication / num1;      /*after the loop num1 is the GCD of the two numbers*/[m
[32m+[m[32m        return "LCM: is " + lcm;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/src/Main.java b/src/Main.java[m
[1mnew file mode 100644[m
[1mindex 0000000..308fc83[m
[1m--- /dev/null[m
[1m+++ b/src/Main.java[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32mimport java.util.Scanner;[m
[32m+[m
[32m+[m[32mpublic class Main{[m
[32m+[m[32m    public static void main(String[] args) {[m
[32m+[m[32m        Scanner scan = new Scanner(System.in);[m
[32m+[m[32m        int n = Integer.parseInt(scan.nextLine());[m
[32m+[m
[32m+[m[32m        for (int i = 1; i <= n; i += 3){[m
[32m+[m[32m            System.out.println(i);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
